var cacheService=(()=>{get(a,b){return new Promise(function(d,c){caches.match(a.request,{cacheName:b.cacheName}).then(b=>{setTimeout(function(){return b?d(b):c(a)},5e3)}).catch(b=>{c(a)})})},clean(a){caches.keys().then(b=>{b.forEach(function(b){return b!==a.cacheName?caches.delete(b):void 0})})},cache(a,b){caches.open(b.cacheName).then(b=>(b.addAll(a)))}})(),fetchService=(()=>{get(a){return new Promise(function(c,b){fetch(a.request).then(d=>(d?(c(d)):(b(a)))).catch(c=>{b(a)})})}})(),_promiseAny=function(a){return new Promise((b,c)=>{a=a.map(a=>Promise.resolve(a)),a.forEach(a=>a.then(b)),a.reduce((a,b)=>a.catch(()=>b)).catch(()=>c(Error('All failed')))})},swRequest=(b,a)=>{if(!a.serviceOrder)return new Promise((c,d)=>{_promiseAny([cacheService.get(b,a),fetchService.get(b)]).then(a=>{c(a)}).catch(a=>{console.error(a),d(b)})});else{let c={cache:cacheService,fetch:fetchService};return new Promise((d,e)=>{c[a.serviceOrder[0]].get(b,a).then(a=>{d(a)}).catch(b=>{c[a.serviceOrder[1]].get(b).then(a=>{d(a)}).catch(a=>{e(a)})})})}}